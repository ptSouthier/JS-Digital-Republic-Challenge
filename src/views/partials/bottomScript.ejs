<script>
  const wallsDimensionsForm = document.querySelector('#walls-dimensions-form');
  const wallsFieldsets = document.querySelectorAll('.wall-fieldset');
  const windowMeasures = { height: 1.2, width: 2 };
  const doorMeasures = { height: 1.9, width: 0.8 };
  const squareMetersByPaintLiter = 5;
  const paintCanSizes = [0.5, 2.5, 3.6, 18];

  const getSquareMeter = (height, width) => {
    return height * width;
  };

  const getWindowsTotalArea = (windowsQuantity) => {
    const windowArea = getSquareMeter(windowMeasures.height, windowMeasures.width);
    return windowArea * windowsQuantity;
  };

  const getDoorsTotalArea = (doorsQuantity) => {
    const doorArea = getSquareMeter(doorMeasures.height, doorMeasures.width);
    return doorArea * doorsQuantity;
  };

  const getWindowsAndDoorsTotalArea = (windowsArea, doorsArea) => {
    return windowsArea + doorsArea;
  };

  const validateWindowsAndDoorsArea = (windowsAndDoorsTotalArea, wallArea) => {
    const fiftyPercentOfWallArea = wallArea * 0.5;
    if (windowsAndDoorsTotalArea > fiftyPercentOfWallArea) {
      return false;
    };
  };

  const validateHeightOfWallsWithDoor = (wallHeight) => {
    const minimumDistanceMargin = 0.3;
    const minimumAcceptableWallHeight = doorMeasures.height + minimumDistanceMargin;
    if (wallHeight < minimumAcceptableWallHeight) {
      return false;
    };
  };

  const getWallEntryValue = (wallElement, entryString, index) => {
    return parseFloat(wallElement.querySelector(`#${entryString}-${index}`).value);
  };

  const getWallsValues = (wallsElements) => {
    const wallsObject = {};
    wallsElements.forEach((wall, currentIndex) => {
      const heightValue = getWallEntryValue(wall, 'height', currentIndex);
      const widthValue = getWallEntryValue(wall, 'width', currentIndex);
      const windowsValue = getWallEntryValue(wall, 'windows', currentIndex);
      const doorsValue = getWallEntryValue(wall, 'doors', currentIndex);
      wallsObject[`wall${currentIndex}`] = [heightValue, widthValue, windowsValue, doorsValue];
    });
    return wallsObject;
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    return getWallsValues(wallsFieldsets);
  };

  wallsDimensionsForm.addEventListener('submit', handleSubmit);
</script>
